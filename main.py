import pygame
import random
from pygame.locals import *
pygame.init()
screen = pygame.display.set_mode((800,800),pygame.RESIZABLE)
pygame.display.set_caption('起床战争')
f = pygame.font.SysFont(['华文黑体','kefa'],15)
a = True
clock= pygame.time.Clock()
class Players():
    def __init__(self,work,home_x,home_y,x,y,in_x,in_y):
        self.work = work
        self.in_x=in_x
        self.in_y=in_y
        self.in_y=random.randint(0,36)
        self.in_x=random.randint(0,36)
        self.x=x
        self.x=random.randint(0,39)
        self.y=y
        self.y = random.randint(0,39)
        self.home_x=home_x
        self.home_x=random.randint(1,35)
        self.home_y=home_y
        self.home_y = random.randint(1,35)
        self.work = 1
        # 1 is farmer 2 is Unemployed
    def new(self):
        global maps
        if maps[self.y][self.x] == 1 or maps[self.y][self.x] == 2:
            self.y=random.randint(0,39)
            self.x=random.randint(0,39)
        pygame.draw.circle(screen, (0, 0, 255), [self.x*20+10,self.y*20+10], 10)
    def move(self):
        global maps
        rx=0
        ry=0
        if self.work== 1 and maps[self.y][self.x] >=3:
            if maps[self.y][self.x]+1>=8:
                maps[self.y][self.x]=3
            else:
                maps[self.y][self.x]+=1
        rx=self.x+random.randint(-1,1)
        ry=self.y+random.randint(-1,1)
        if rx<=39 and rx>=0 and ry<=39 and ry>=0 and maps[ry][rx] !=1:
                self.x=rx
                self.y=ry
                
    def please(self):
        global maps
        maps[self.home_y][self.home_x]=1
        maps[self.home_y][self.home_x+1]=1
        maps[self.home_y][self.home_x+2]=1
        maps[self.home_y][self.home_x+3]=1
        maps[self.home_y+1][self.home_x+3]=1
        maps[self.home_y+1][self.home_x+3]=1
        maps[self.home_y+2][self.home_x+3]=1
        maps[self.home_y+3][self.home_x+3]=1
        maps[self.home_y+3][self.home_x+2]=1
        maps[self.home_y+3][self.home_x+1]=1
        maps[self.home_y+3][self.home_x]=1
        maps[self.home_y+2][self.home_x]=0
        maps[self.home_y+1][self.home_x]=0
        maps[self.home_y+1][self.home_x+1]=0
        maps[self.home_y+2][self.home_x+1]=0
        maps[self.home_y+2][self.home_x+2]=0
        maps[self.home_y+1][self.home_x+2]=0
        if self.work == 1:
            for i in range(3):
                for j in range(3):
                    maps[self.in_y+j][self.in_x+i] = 3
maps = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]
x=[]
for i in range(20):
    x.append('')
    x[i]=Players(0,0,0,0,0,0,0)
    x[i].new()
    x[i].please()
def in_the_class():
    global x
    for i in range(20):
        x[i].new()
        x[i].move()
def draw():
    global maps
    for i in range(40):
        for j in range(40):
            if maps[i][j] ==0:
                pygame.draw.rect(screen, (155, 255, 0), (j*20, i*20, 20, 20), 1)
            elif maps[i][j]==1:
               pygame.draw.rect(screen, (0, 0, 0), (j*20, i*20, 20, 20), 1)
            elif maps[i][j]==2:
                pygame.draw.rect(screen, (127, 255, 212), (j*20, i*20, 20, 20), 1)
            elif maps[i][j]==3:
                pygame.draw.rect(screen, (199, 97, 20), (j*20, i*20, 20, 20), 1)
            elif maps[i][j]==4:
                pygame.draw.rect(screen, (199, 97, 20), (j*20, i*20, 20, 20),1)
                pygame.draw.rect(screen, (124, 252, 0), (j*20+5, i*20+5, 10, 10),0)
            elif maps[i][j]==5:
                pygame.draw.rect(screen, (199, 97, 20), (j*20, i*20, 20, 20), 1)
                pygame.draw.rect(screen, (34, 139, 34), (j*20+5, i*20+5, 10, 10),0)
            elif maps[i][j]==6:
                pygame.draw.rect(screen, (199, 97, 20), (j*20, i*20, 20, 20), 1)
                pygame.draw.rect(screen, (48, 128, 20), (j*20+5, i*20+5, 10, 10),0)
            elif maps[i][j]==7:
                pygame.draw.rect(screen, (199, 97, 20), (j*20, i*20, 20, 20), 1)
                pygame.draw.rect(screen, (46, 139, 87), (j*20+5, i*20+5, 10, 10),0)
                maps[i][j]=3
while a:
    clock.tick(30)
    if 1==1:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                    a=False
    screen.fill((255,255,255))
    draw()
    in_the_class()
    pygame.display.flip()
pygame.quit()
